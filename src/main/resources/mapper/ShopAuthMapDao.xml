<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.al.o2o.dao.ShopAuthMapDao">
    <resultMap id="shopAuthResultMap" type="com.al.o2o.entity.ShopAuthMap">
        <id column="shop_auth_id" property="shopAuthId"/>
        <result column="title" property="title"/>
        <result column="title_flag" property="titleFlag"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <result column="enable_status" property="enableStatus"/>
        <association property="employee" javaType="com.al.o2o.entity.PersonInfo"
                     column="user_id">
            <id column="user_id" property="userId"/>
            <result column="name" property="name"/>
        </association>
        <association property="shop" javaType="com.al.o2o.entity.Shop"
                     column="shop_id">
            <id column="shop_id" property="shopId"/>
            <result column="shop_name" property="shopName"/>
        </association>
    </resultMap>

    <select id="queryShopAuthMapByShopId" resultMap="shopAuthResultMap">
        SELECT
        sam.shop_auth_id,
        sam.title,
        sam.title_flag,
        sam.create_time,
        sam.last_edit_time,
        sam.enable_status,
        buyer.user_id,
        buyer.name,
        s.shop_id,
        s.shop_name
        FROM
        tb_shop_auth_map sam,
        tb_person_info buyer,
        tb_shop s
        WHERE
        sam.employee_id = buyer.user_id
        AND
        sam.shop_id = s.shop_id
        AND
        sam.shop_id = #{shopId}
        LIMIT #{pageIndex},#{pageSize}
    </select>

    <select id="queryShopAuthCountByShopId" resultType="int">
        SELECT COUNT(1)
        FROM
        tb_shop_auth_map sam,
        tb_person_info buyer,
        tb_shop s
        WHERE
            sam.employee_id = buyer.user_id
            AND
            sam.shop_id = s.shop_id
            AND
            sam.shop_id = #{shopId}
    </select>

    <select id="queryShopAuthMapById" resultMap="shopAuthResultMap">
        SELECT
        sam.shop_auth_id,
        sam.title,
        sam.title_flag,
        sam.create_time,
        sam.last_edit_time,
        sam.enable_status,
        buyer.user_id,
        buyer.name,
        s.shop_id,
        s.shop_name
        FROM
        tb_shop_auth_map sam,
        tb_person_info buyer,
        tb_shop s
        WHERE
         sam.employee_id = buyer.user_id
        AND
         sam.shop_id = s.shop_id
        AND
         sam.shop_auth_id = #{shopAuthId}
    </select>

    <insert id="insertShopAuthMap" useGeneratedKeys="true" keyColumn="shop_auth_id"
            keyProperty="shopAuthId" parameterType="com.al.o2o.entity.ShopAuthMap">
        INSERT INTO
        tb_shop_auth_map(employee_id, shop_id, title, title_flag, create_time, last_edit_time, enable_status) VALUES
                        (#{employee.userId},#{shop.shopId},#{title},#{titleFlag},#{createTime},#{lastEditTime},#{enableStatus})
    </insert>

    <update id="updateShopAuthMap" useGeneratedKeys="true" keyColumn="shop_auth_id"
            parameterType="com.al.o2o.entity.ShopAuthMap">
        UPDATE tb_shop_auth_map
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="titleFlag != null">title_flag = #{titleFlag},</if>
            <if test="createTime != null">create_time = #{createTime}</if>
            <if test="lastEditTime != null">last_edit_time = #{lastEditTime}</if>
        </set>
        WHERE
        shop_auth_id = #{shopAuthId}
    </update>

    <delete id="deleteShopAuthMap" parameterType="long">
        DELETE FROM tb_shop_auth_map
        WHERE shop_auth_id = #{shopAuthId}
    </delete>
</mapper>